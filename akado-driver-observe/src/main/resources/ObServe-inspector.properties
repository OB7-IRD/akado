#
# Copyright (C) 2014 Observatoire thonier, IRD
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
database.info={0}> Information of ObServe DB:\n\tTrip={1} between {2} and {3},\n\tActivity={4} between {5} and {6},\n\tSampling={7},\n\tWell={8}
database.version.not.compatible=The version of the loaded database {0} is not compatible. You must convert your database to the version {1}.
message.vessel.nocapacity={0}> The capacity of the vessel {1} is not filled.
message.trip.noactivities={0}> Trip[{1}] There is no activity in this trip but the field \u00ABF_ENQ\u00BB is 1.
message.trip.activity.nologbook={0}> Trip[{1}] There is at least one activity in this trip but the field \u00ABF_ENQ\u00BB is 0.
message.trip.startDate={0}> Trip[{1}] The departure date filled is {2} but the date of first activity is {3}.
message.trip.endDate={0}> Trip[{1}] The landing date filled is {2} but the date of last activity is {3}.
message.trip.landingtotalweight={0}> Trip[{1}] The value obtained for the \u00ABlanding total weight\u00BB field is {2}  but the value expected is {3} based on elementary landing.
message.trip.no.timeatsea={0}> Trip[{1}] The value obtained for the \u00ABtime at sea\u00BB field is 0.
message.trip.timeatsea={0}> Trip[{1}] The value obtained for the \u00ABtime at sea\u00BB field is {2}, but the value expected is {3}.
message.trip.recoverytime={0}> Trip[{1}] It lacks at least one route between {2} and {3}.
message.trip.route.no.activity={0}> Trip[{1}] It lacks at least one activity on route {2}.
message.trip.fishingtime={0}> Trip[{1}] The value obtained for the \u00ABfishing time\u00BB is {2}, but the value expected is {3}.
message.trip.rf1={0}> Trip[{1}] The raising factor is {2}.
message.trip.rf1.localmarket={0}> Trip[{1}] The raising factor including local market is {2}.
message.trip.capacity.override={0}> Trip[{1}] The total catches weight is {2} tons and seems to override the capicity of the vessel {3} tons.
message.trip.nocatch={0}> Trip[{1}] There are no reported catch but the \u00ABlanding total weight\u00BB field is {2}.
message.trip.different.harbour={0}> Trip[{1}] The departure harbour is ({2}) but the landing harbour ({3}) of the previous trip is different.
message.activity.totalcaptureweight={0}> Activity[{1}] The value obtained for the \u00ABtotal capture weight\u00BB field is {2}  but the value expected is {3} based on elementary catches.
message.activity.fishing.context.inconsistency.artificial.school.type={0}> Activity[{1}] The \u00ABschool type\u00BB is {2} but at least one of the required observed system (related to object school type) not found.
message.activity.fishing.context.inconsistency.free.school.type={0}> Activity[{1}] The \u00ABschool type\u00BB is {2} but at least one of the forbidden observed system not found (related to object school type).
message.activity.fishing.context.null={0}> Activity[{1}] No observed systems found.
message.activity.not.fishing.operation.inconsistency.with.set.count={0}> Activity[{1}] This activity ( \u00ABoperation code\u00BB {2} ) is not a fishing activity, but the field \u00AB setCount \u00BB is not null (value {3} )
message.activity.not.fishing.operation.inconsistency.with.catch.weight={0}> Activity[{1}] This activity ( \u00ABoperation code\u00BB {2} ) is not a fishing activity, but the field \u00AB catch weight \u00BB is not null (value {3} )
message.activity.fishing.operation.inconsistency.with.set.count={0}> Activity[{1}] This activity ( \u00ABoperation code\u00BB {2} ) is a fishing activity, but the field \u00AB setCount \u00BB is not defined
message.activity.fishing.operation.inconsistency.with.catch.weight={0}> Activity[{1}] This activity ( \u00ABoperation code\u00BB {2} ) is a fishing activity, but the field \u00AB catch weight \u00BB is not defined
message.activity.fishing.operation.inconsistency.catch.weight={0}> Activity[{1}] This activity ( \u00ABoperation code\u00BB {2} ) is a fishing activity, but the field \u00AB catch weight \u00BB value {3} is more than 5 tons
message.activity.fishing.operation.and.reason.for.no.fishing.inconsistency.catch.weight={0}> Activity[{1}] This activity ( \u00ABoperation code\u00BB {2} ) is a fishing activity with reason for no fishing filled ( value : {3} ) , but the field \u00AB catch weight \u00BB ( value {4} ) is not null.
message.activity.operation.eez.inconsistency={0}> Activity[{1}] This activity is a fishing operation (\u00ABoperation code\u00BB {2}), but no fpa zone is defined.
message.activity.position.inconsistency={0}> Activity[{1}] This activity ( \u00ABoperation code\u00BB {2} ) has no coordinate, which is forbidden except for a floating objet operation (loss/end of transmission), or end of use of the buoy.
message.activity.position.eez.inconsistency={0}> Activity[{1}] EEZ ({2}) is inconsistent compared to the position ({3}), the computed EEZ from position is ({4}).
message.activity.ocean={0}> Activity[{1}] The value obtained for the \u00ABocean\u00BB field is {2}  but the value expected is {3} based on position activity.
message.activity.quadrant={0}> Activity[{1}] The value obtained for the \u00ABquadrant\u00BB field is {2}  but the \u00ABocean code\u00BB field in the trip is \u00ABIndian Ocean\u00BB.
message.activity.position.notinocean={0}> Activity[{1}] The position {2} locates the activity in \u00AB{3}\u00BB.
message.activity.position.weird={0}> Activity[{1}] The position {2} seems weird. This position is not in the ocean, or inland.
message.activity.no.trace.vms={0}> Activity[{1}] There is no VMS position in the database for the activity date.
message.no.activity.trace.vms={0}> There is VMS position for the date {1} in the database, but there is no activity.
message.activity.trace.vms.match={0}> Activity[{1}] There are {2} VMS positions matching to the activity position.
#message.activity.trace.vms.cl2={0}> Activity[{1}] No VMS position match with the activity position in CL1. The coordinate {3} is available to correct the activity position with {3} reliability.
message.activity.trace.vms.cl2={0}> Activity[{1}] No VMS position match with the activity position in CL1 and CL2 {2}, there is {3} positions available to correct the activity position.
message.activity.trace.vms.no.match={0}> Activity[{1}] No VMS position match with the activity position.
message.activity.catch.weight.sample.weighted.weight={0}> Activity[{1}] The sum of elementary catches "{2}" and the weighted weight of sample "{3}" are different.
message.trace.vms.inconsistent.position.count={0}> Activity[{1}] The VMS position''s count is {2} but it must be superior to 20.
message.activity.trace.vms.score={0}> Activity[{1}] There is {2} VMS positions which are consistent with the activity position.
message.anapo.no.activity={0}> Vessel [{1}] There is VMS positions for the {2} but no activity.
message.sample.nospecies={0}> Sample[{1}] This sample has no \u00ABsample species\u00BB.
message.sample.nomeasure={0}> Sample[{1}] The sub-sample number {2} for the species \u00AB{3}\u00BB and the \u00ABLDLF\u00BB field {4} has no measure.
message.sample.weight.inconsistency={0}> Sample[{1}] The sum of \u00ABMinus10Weight\u00BB and \u00ABPlus10Weight\u00BB fields is {2} but the \u00ABGlobal Weight\u00BB  value is {3}.
message.sample.little.threshold={0}> Sample[{1}] There is {2}% of little fish (threshold:{3}%) and the ratio of LF:{4}% and LD1:{5}% measures.
message.sample.big.threshold={0}> Sample[{1}] There is {2}% of big fish (threshold:{3}%) and the ratio of LF:{4}% and LD1:{5}% measures.
message.sample.weighting.sup100={0}> Sample[{1}] The weight value is {2}, it is superior at 100 T.
message.sample.weighting.ratio={0}> Sample[{1}] The weighted weight is {2}, and it''s inferior at the weight value which is {3}, and the ratio is {4}
message.sample.weighting.bb.weight={0}> Sample[{1}] BB - The weighted weight is {2} and the weight of sampling is {3}.
message.sample.weighting.bb.lc={0}> Sample[{1}] BB - The weighted weight is {2} and the weight of elementary landing is {3}.
message.sample.measure.count={0}> Sample[{1}] The number of measures is {2} but the number of measured fish is {3}.
message.sample.ldlf.m10={0}> Sample[{1}] The LDLF value is {2} and the \u00ABMinus10Weight\u00BB value is {3} and the \u00ABGlobal Weight\u00BB value is {4}.
message.sample.ldlf.p10={0}> Sample[{1}] The LDLF value is {2} and the \u00ABPlus10Weight\u00BB value is {3} and the \u00ABGlobal Weight\u00BB value is {4}.
message.sample.ldlf.species.forbidden={0}> Sample[{1}] The species with the code {2} can''t have the flag LD1.
message.sample.length.class.bound.not.found={0}> Sample[{1}] The species with the code {2}, measure with method {3} can not be checked (no bound found).
message.sample.length.class.error={0}> Sample[{1}] The species with the code {2}, measured with method {3} has a length class which is equals to {4} must be between {5} and {6}.
message.sample.length.class.warning={0}> Sample[{1}] The species with the code {2}, measured with method {3} has a length class which is equals to {4} should be between {5} and {6}.
message.sample.distribution.m10.p10={0}> Sample[{1}] The distribution values of -10/+10 (values: {2}/{3}) are inconsistent with those of the well {4} (values: {5}/{6}).
message.sample.well.not.in.well.plan={0}> Sample[{1}] The sample well {2} is not defined in the trip well plan.